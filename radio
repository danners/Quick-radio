#!/usr/bin/env python

import gtk, pygst, gst, pynotify
class Player:
	def __init__(self):
		self.fritz=('mms://stream2.rbb-online.de/wmtencoder/fritz-live-backup.wma')
		self.dradio=('http://dradio.ic.llnwd.net/stream/dradio_dlf_m_a.ogg')
		self.dradiow=('http://dradio.ic.llnwd.net/stream/dradio_dwissen_m_a.ogg')
		self.player = gst.element_factory_make("playbin","player")
		bus = self.player.get_bus()
		bus.add_signal_watch()
		bus.connect("message", self.on_message)
	
	
	def playdradio(self,chan):
		self.player.set_state(gst.STATE_NULL)
		self.player.set_property("uri",self.dradio)
		self.player.set_state(gst.STATE_PLAYING)
		notify("Spiele Dradio")

	def playfritz(self,chan):
		self.player.set_state(gst.STATE_NULL)
		self.player.set_property("uri",self.fritz)
		self.player.set_state(gst.STATE_PLAYING)
		notify("Spiele Fritz")
	
	def playdradiow(self,chan):
		self.player.set_state(gst.STATE_NULL)
		self.player.set_property("uri",self.dradiow)
		self.player.set_state(gst.STATE_PLAYING)
		notify("Spiele Dradio Wissen")
	
	
	def on_message(self,bus,message):
		t = message.type
		if t == gst.MESSAGE_EOS:
			self.player.set_state(gst.STATE_NULL)
		elif t == gst.MESSAGE_ERROR:
			self.player.set_state(gst.STATE_NULL)
			err, debug = message.parse_error()
			print "Error: %s" % err, debug

class RadioMenu(gtk.Menu):
	def __init__(self):
		gtk.Menu.__init__(self)
	       	self.radio = Player()	

		item = gtk.ImageMenuItem('Dradio')
		item.connect('activate', self.radio.playdradio)
		item.set_image(gtk.image_new_from_stock('gtk-media-play', gtk.ICON_SIZE_MENU))
		self.append(item)


		item = gtk.ImageMenuItem('Fritz')
		item.connect('activate', self.radio.playfritz)
		item.set_image(gtk.image_new_from_stock('gtk-media-play', gtk.ICON_SIZE_MENU))
		self.append(item)

		
                
		item = gtk.ImageMenuItem('Dradio W')
                item.connect('activate', self.radio.playdradiow)
                item.set_image(gtk.image_new_from_stock('gtk-media-play', gtk.ICON_SIZE_MENU))
		self.append(item)

		item = gtk.ImageMenuItem('exit')
		item.connect('activate', gtk.main_quit)
		item.set_image(gtk.image_new_from_stock('gtk-quit',gtk.ICON_SIZE_MENU))
		self.append(item)


	def show_menu(self, widget, button, time):
			self.show_all()
			self.popup(None, None, gtk.status_icon_position_menu, button, time, icon)

	

def initCaps ():
	capabilities = {'actions':             False,
	'body':                False,
	'body-hyperlinks':     False,
	'body-images':         False,
	'body-markup':         False,
	'icon-multi':          False,
	'icon-static':         False,
	'sound':               False,
	'image/svg+xml':       False,
	'private-synchronous': False,
	'append':              False,
	'private-icon-only':   False}
	caps = pynotify.get_server_caps ()
	if caps is None:
        	print "Failed to receive server caps."
		sys.exit (1)
		for cap in caps:
			capabilities[cap] = True
def notify(message):
		pynotify.init('icon-summary')
		printmsg = pynotify.Notification(message,"","gnome-dev-wavelan")
		printmsg.show()

icon = gtk.status_icon_new_from_file('/usr/share/icons/gnome/24x24/devices/gnome-dev-wavelan.png')
icon.set_tooltip('Radio switcher')
player = Player()
menu = RadioMenu()
initCaps()
icon.connect("popup-menu",menu.show_menu)
gtk.main()
